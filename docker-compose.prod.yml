version: '3.3'
# 18.04 1.17 3.3
# 20.04 19.03 3.8
services: 
  web:
    build: 
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn django_tiger.wsgi:application --bind 0.0.0.0:8000
    # command: gunicorn django_tiger.wsgi:application
    volumes: 
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose: 
      - 8000 # 只对docker内开放端口
    env_file: 
      - ./.env.prod
    depends_on: 
      - db
      - redis

  db:
    image: postgres:13-alpine
    volumes: 
      - postgres_data:/var/lib/postgresql/data/
    env_file: 
      - ./.env.prod.db

  bot:
    build: 
      context: ./bot
    command: python cron.py
    env_file: 
      - ./.env.bot
    volumes:
      - bot_volume:/home/app/web/botfiles

  redis:
    image: redis:alpine
    volumes: 
      - redis_data:/data
    command: 
      redis-server --appendonly yes

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile.prod
      # 参考nginx文件夹里配置的注释来使用
    volumes: 
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - bot_volume:/home/app/web/botfiles
    ports: 
      - 80:80
      - 443:443
    environment:
      TZ : 'Asia/Shanghai'


volumes: 
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  bot_volume: